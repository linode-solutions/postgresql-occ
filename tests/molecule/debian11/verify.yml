---
- name: Verify
  hosts: postgresql
  gather_facts: false
  user: root
  vars_files:
    - ../../vars.yml

  tasks:
    - name: create test database and insert data on primary
      postgresql_query:
        db: postgres
        query: CREATE DATABASE replication_test;
        autocommit: yes
      become_user: postgres
        #become_method: su
        #become_flags: '-'
      become: true
      run_once: true
      delegate_to: "{{ groups['postgresql'][0] }}"

    - name: insert into test database from primary
      postgresql_query:
        db: replication_test
        query: "{{ item.query }}"
        autocommit: yes
      loop:
        - { query: "CREATE TABLE replication_test(ID SERIAL PRIMARY KEY NOT NULL, replication_status TEXT NOT NULL);" }
        - { query: "INSERT INTO replication_test(replication_status) VALUES ('working');" }
      become_user: postgres
        #become_method: su
        #become_flags: '-'
      become: true
      run_once: true
      delegate_to: "{{ groups['postgresql'][0] }}"

    - name: query data from secondary postgresql server
      postgresql_query:
        db: replication_test
        query: SELECT * FROM replication_test;
      become_user: postgres
        #become_method: su
        #become_flags: '-'
      become: true
      run_once: true
      delegate_to: "{{ groups['postgresql'][1] }}"
      register: replication_info

    - name: verify replication of data
      assert:
        that:
          - "{{ replication_info.query_result[0]['replication_status'] == 'working'}}"
      run_once: true
      delegate_to: "{{ groups['postgresql'][1] }}"
